import telebot
import logging
from sqlalchemy.orm import Session
import time # –î–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –∑–∞–¥–µ—Ä–∂–∫–∏ LLM
from threading import Thread
from dotenv import load_dotenv 
import os
load_dotenv()
# --- –ó–ê–ì–õ–£–®–ö–ò –ò –ù–ê–°–¢–†–û–ô–ö–ò (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ó–ê–ú–ï–ù–ò–¢–ï) ---
TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
LLM_CLIENT = None  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –≤–∞—à LLM –∫–ª–∏–µ–Ω—Ç
QDRANT_CLIENT = None # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –≤–∞—à Qdrant –∫–ª–∏–µ–Ω—Ç
LIMIT_K = 10 

# # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
# # from your_db_module import engine 
# # from your_rag_module import semantic_search, retrieve_full_context 
# # from your_llm_module import generate_rag_response_deepseek
# from test_file import generate_rag_response, vectorize_query, embedding_model, context, client, web_link

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ ---
bot = telebot.TeleBot(TELEGRAM_TOKEN)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO
)
logger = logging.getLogger(__name__)

# --- –û–ë–†–ê–ë–û–¢–ß–ò–ö –ö–û–ú–ê–ù–î–´ /start ---

@bot.message_handler(commands=['start'])
def send_welcome(message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å."""
    bot.reply_to(
        message, 
        f"üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n"
        "–Ø ‚Äî –≤–∞—à RAG-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –ó–∞–¥–∞–π—Ç–µ –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –ø–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º, "
        "–∏ —è –æ—Ç–≤–µ—á—É –∏ –¥–∞–º —Å—Å—ã–ª–∫—É –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫."
    )

# --- –û–°–ù–û–í–ù–û–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö –¢–ï–ö–°–¢–û–í–´–• –°–û–û–ë–©–ï–ù–ò–ô ---

@bot.message_handler(func=lambda message: True)
def handle_user_query_thread(message):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç RAG-–∫–æ–Ω–≤–µ–π–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∑–∞–≤–∏—Å–∞–Ω–∏—è –±–æ—Ç–∞."""
    # # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–ª–æ–∂–Ω—É—é –ª–æ–≥–∏–∫—É –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    # Thread(target=process_rag_request, args=(message,)).start()
    bot.reply_to(
        message, 
        f"!!!!!!{15}.")
# def process_rag_request(message):
#     """–û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ RAG-–∫–æ–Ω–≤–µ–π–µ—Ä–∞."""
#     user_query = message.text
#     chat_id = message.chat.id

#     # 1. –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
#     processing_message = bot.send_message(chat_id, "‚è≥ –í–∞—à –≤–æ–ø—Ä–æ—Å –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ...")
#     message_id = processing_message.message_id
    
#     try:
#         # --- RAG: –ü–æ–∏—Å–∫ –∏ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ ---
#         query_vector  = vectorize_query(user_query, embedding_model)
#         final_answer = generate_rag_response(context, user_query, client)
#             # 4. –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
#         response_text = f"""
# {final_answer}

# ---
# üîó **–ò—Å—Ö–æ–¥–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç:** {web_link if web_link else '–°—Å—ã–ª–∫–∞ –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.'}
# """
            
#         # 5. –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è (—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º "–í –æ–±—Ä–∞–±–æ—Ç–∫–µ...")
#         bot.edit_message_text(
#             chat_id=chat_id, 
#             message_id=message_id, 
#             text=response_text
#         )

#     except Exception as e:
#         logger.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ RAG-–∫–æ–Ω–≤–µ–π–µ—Ä–∞: {e}")
#         # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
#         bot.edit_message_text(
#             chat_id=chat_id, 
#             message_id=message_id, 
#             text=f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {e}"
#         )


if __name__ == '__main__':
    # –í–ê–® –ö–û–î: –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è LLM_CLIENT, QDRANT_CLIENT –∏ –¥—Ä.
    # ...
    
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")
    try:
        # –ë–æ—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç –æ–ø—Ä–æ—Å —Å–µ—Ä–≤–µ—Ä–∞ Telegram
        bot.polling(none_stop=True)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")